// <auto-generated />
using System;
using FHHL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FHHL.Data.Migrations
{
    [DbContext(typeof(FHHLDbContext))]
    partial class FHHLDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FHHL.Data.DomainModels.Assignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Assignees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 866, DateTimeKind.Unspecified).AddTicks(2829), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Teresa"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(6980), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Bonnie"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7042), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Missy"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7051), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Marla"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7057), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Ariona"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7063), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Outreach Letter"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7070), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Felica"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7076), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Jene"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7082), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Abby"
                        },
                        new
                        {
                            Id = 10,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7089), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Tandem"
                        },
                        new
                        {
                            Id = 11,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7095), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Renee"
                        },
                        new
                        {
                            Id = 12,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7101), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Emma"
                        },
                        new
                        {
                            Id = 13,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 868, DateTimeKind.Unspecified).AddTicks(7107), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Marsue"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Caregiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Foster")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("[FirstName] + ' ' + [LastName]");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("MomClass")
                        .HasColumnType("bit");

                    b.Property<bool>("Spanish")
                        .HasColumnType("bit");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Caregivers");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.CaregiverRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<int>("CaregiverId")
                        .HasColumnType("integer");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CaregiverId");

                    b.HasIndex("RaceId");

                    b.ToTable("CaregiverRaces");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.PregnancyState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("PregnancyStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(6440), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Prebirth"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(7629), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Birth"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(7677), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Toddler"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(7684), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Infant"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(7691), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Postpartum"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(8691), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "HSHV"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(9810), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "NBHV"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(9860), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "NFP"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(9868), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PHN"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(9874), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PART C"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(9880), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "FS"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 869, DateTimeKind.Unspecified).AddTicks(9887), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Outreach"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(883), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "White"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(1973), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Black"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(2014), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Black/White"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(2022), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "American Indian"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(2028), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Asian"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(2034), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Non-Hispanic"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(2041), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Unknown"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(2047), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Referral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("AssignDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("integer");

                    b.Property<int>("CaregiverId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChildDateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChildName")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("EstimatedDeliveryDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("FirstChild")
                        .HasColumnType("bit");

                    b.Property<bool>("FtoF")
                        .HasColumnType("bit");

                    b.Property<int?>("LOR")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Program")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("ReferralDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ReferralReason")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Result")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ResultDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CaregiverId");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<int>("ReferralId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("ReferralId");

                    b.ToTable("ReferralRaces");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralReferralSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<int>("ReferralId")
                        .HasColumnType("integer");

                    b.Property<int>("ReferralSourceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.HasIndex("ReferralSourceId");

                    b.ToTable("ReferralReferralSources");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ReferralSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(3043), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PG Testing"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4150), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "M & I"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4237), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Hopsital"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4245), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "WIC"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4252), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Successful Connections"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4258), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "TARC"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4265), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Washburn"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4271), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(4277), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Lincoln Center"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.RiskLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("RiskLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(5288), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "High"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(6390), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(6429), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Low"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.VisitResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("VisitResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(7442), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Home Visit"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8539), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Declined"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8582), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "No Response"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8589), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Failed"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8596), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Miscarried"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8602), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Moved"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8608), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Lost"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8615), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Deferred"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8621), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Enrolled"
                        },
                        new
                        {
                            Id = 10,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 22, 13, 36, 47, 870, DateTimeKind.Unspecified).AddTicks(8627), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.CaregiverRace", b =>
                {
                    b.HasOne("FHHL.Data.DomainModels.Caregiver", "Caregiver")
                        .WithMany("CaregiverRaces")
                        .HasForeignKey("CaregiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FHHL.Data.DomainModels.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caregiver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Referral", b =>
                {
                    b.HasOne("FHHL.Data.DomainModels.Caregiver", "Caregiver")
                        .WithMany("Referrals")
                        .HasForeignKey("CaregiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caregiver");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralRace", b =>
                {
                    b.HasOne("FHHL.Data.DomainModels.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FHHL.Data.DomainModels.Referral", "Referral")
                        .WithMany("ReferralRaces")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Race");

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralReferralSource", b =>
                {
                    b.HasOne("FHHL.Data.DomainModels.Referral", "Referral")
                        .WithMany("ReferralReferralSources")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FHHL.Data.DomainModels.ReferralSource", "ReferralSource")
                        .WithMany()
                        .HasForeignKey("ReferralSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");

                    b.Navigation("ReferralSource");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Caregiver", b =>
                {
                    b.Navigation("CaregiverRaces");

                    b.Navigation("Referrals");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Referral", b =>
                {
                    b.Navigation("ReferralRaces");

                    b.Navigation("ReferralReferralSources");
                });
#pragma warning restore 612, 618
        }
    }
}

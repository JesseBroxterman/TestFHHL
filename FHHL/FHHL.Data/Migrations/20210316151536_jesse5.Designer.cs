// <auto-generated />
using System;
using FHHL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FHHL.Data.Migrations
{
    [DbContext(typeof(FHHLDbContext))]
    [Migration("20210316151536_jesse5")]
    partial class jesse5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FHHL.Data.DomainModels.Assignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Assignees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 147, DateTimeKind.Unspecified).AddTicks(4106), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Teresa"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6353), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Bonnie"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6422), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Missy"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6432), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Marla"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6438), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Ariona"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6445), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Outreach Letter"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6451), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Felica"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6457), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Jene"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6464), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Abby"
                        },
                        new
                        {
                            Id = 10,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6470), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Tandem"
                        },
                        new
                        {
                            Id = 11,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6476), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Renee"
                        },
                        new
                        {
                            Id = 12,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6483), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Emma"
                        },
                        new
                        {
                            Id = 13,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 149, DateTimeKind.Unspecified).AddTicks(6489), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Marsue"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Caregiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("MomClass")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Spanish")
                        .HasColumnType("bit");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Caregivers");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.PregnancyState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("PregnancyStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 150, DateTimeKind.Unspecified).AddTicks(8334), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Prebirth"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 150, DateTimeKind.Unspecified).AddTicks(9468), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Birth"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 150, DateTimeKind.Unspecified).AddTicks(9520), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Toddler"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 150, DateTimeKind.Unspecified).AddTicks(9527), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Infant"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 150, DateTimeKind.Unspecified).AddTicks(9534), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Postpartum"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(505), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "HSHV"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(1565), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "NBHV"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(1619), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "NFP"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(1626), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PHN"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(1632), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PART C"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(1685), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "FS"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(1692), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Outreach"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(2652), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "White"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3697), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Black"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3737), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Black/White"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3744), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "American Indian"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3750), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Asian"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3757), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Non-Hispanic"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3763), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Unknown"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(3769), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Referral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("AssignDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChildDateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChildName")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("EstimatedDeliveryDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("FirstChild")
                        .HasColumnType("bit");

                    b.Property<bool>("FtoF")
                        .HasColumnType("bit");

                    b.Property<int?>("LOR")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Program")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("ReferralDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ReferralReason")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Result")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ResultDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ReferralSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(4731), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PG Testing"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5777), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "M & I"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5836), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Hopsital"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5843), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "WIC"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5850), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Successful Connections"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5856), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "TARC"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5862), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Washburn"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5868), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(5874), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Lincoln Center"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.RiskLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("RiskLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(6887), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "High"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(7980), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(8020), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Low"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.VisitResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("VisitResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(8952), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Home Visit"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 151, DateTimeKind.Unspecified).AddTicks(9990), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Declined"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(33), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "No Response"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(41), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Failed"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(47), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Miscarried"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(53), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Moved"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(59), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Lost"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(65), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Deferred"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(71), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Enrolled"
                        },
                        new
                        {
                            Id = 10,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 10, 15, 36, 152, DateTimeKind.Unspecified).AddTicks(78), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

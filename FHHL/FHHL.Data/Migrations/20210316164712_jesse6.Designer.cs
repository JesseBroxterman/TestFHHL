// <auto-generated />
using System;
using FHHL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FHHL.Data.Migrations
{
    [DbContext(typeof(FHHLDbContext))]
    [Migration("20210316164712_jesse6")]
    partial class jesse6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FHHL.Data.DomainModels.Assignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Assignees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 123, DateTimeKind.Unspecified).AddTicks(9081), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Teresa"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 125, DateTimeKind.Unspecified).AddTicks(9934), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Bonnie"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 125, DateTimeKind.Unspecified).AddTicks(9996), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Missy"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(5), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Marla"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(12), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Ariona"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(18), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Outreach Letter"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(25), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Felica"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(31), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Jene"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(37), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Abby"
                        },
                        new
                        {
                            Id = 10,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(44), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Tandem"
                        },
                        new
                        {
                            Id = 11,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(50), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Renee"
                        },
                        new
                        {
                            Id = 12,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(56), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Emma"
                        },
                        new
                        {
                            Id = 13,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 126, DateTimeKind.Unspecified).AddTicks(63), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Marsue"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Caregiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("MomClass")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Spanish")
                        .HasColumnType("bit");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Caregivers");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.CaregiverRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<int>("CaregiverId")
                        .HasColumnType("integer");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CaregiverRaces");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.PregnancyState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("PregnancyStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(1133), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Prebirth"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(2344), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Birth"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(2404), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Toddler"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(2411), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Infant"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(2418), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Postpartum"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(3394), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "HSHV"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(4476), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "NBHV"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(4525), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "NFP"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(4532), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PHN"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(4539), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PART C"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(4597), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "FS"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(4605), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Outreach"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(5566), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "White"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6630), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Black"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6670), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Black/White"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6677), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "American Indian"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6684), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Asian"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6690), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Non-Hispanic"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6696), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Unknown"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(6703), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.Referral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("AssignDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChildDateOfBirth")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChildName")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("EstimatedDeliveryDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("FirstChild")
                        .HasColumnType("bit");

                    b.Property<bool>("FtoF")
                        .HasColumnType("bit");

                    b.Property<int?>("LOR")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Program")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("ReferralDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ReferralReason")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Result")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ResultDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<int>("ReferralId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReferralRaces");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralReferralSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<int>("ReferralId")
                        .HasColumnType("integer");

                    b.Property<int>("ReferralSourceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReferralReferralSources");
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.ReferralSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ReferralSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(7730), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "PG Testing"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8782), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "M & I"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8835), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Hopsital"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8842), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "WIC"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8848), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Successful Connections"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8854), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "TARC"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8861), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Washburn"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8867), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(8873), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Lincoln Center"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.RiskLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("RiskLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 127, DateTimeKind.Unspecified).AddTicks(9803), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "High"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(865), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(903), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Low"
                        });
                });

            modelBuilder.Entity("FHHL.Data.DomainModels.VisitResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AddDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("AddUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ChgDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ChgUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("DelDateTimeOffset")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DelUser")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("VisitResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(1868), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Home Visit"
                        },
                        new
                        {
                            Id = 2,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(2933), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Declined"
                        },
                        new
                        {
                            Id = 3,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(2972), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "No Response"
                        },
                        new
                        {
                            Id = 4,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(2979), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Failed"
                        },
                        new
                        {
                            Id = 5,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(2986), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Miscarried"
                        },
                        new
                        {
                            Id = 6,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(2992), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Moved"
                        },
                        new
                        {
                            Id = 7,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(2998), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Lost"
                        },
                        new
                        {
                            Id = 8,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(3004), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Deferred"
                        },
                        new
                        {
                            Id = 9,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(3010), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Enrolled"
                        },
                        new
                        {
                            Id = 10,
                            ActiveFlag = true,
                            AddDateTimeOffset = new DateTimeOffset(new DateTime(2021, 3, 16, 11, 47, 12, 128, DateTimeKind.Unspecified).AddTicks(3017), new TimeSpan(0, -5, 0, 0, 0)),
                            AddUser = "Seed",
                            DelFlag = false,
                            Label = "Other"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
